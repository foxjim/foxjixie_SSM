<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- org.hnist.mapper.TeacherMapper对应的接口 -->
<mapper namespace="org.hnist.mapper.UserMapper">


	<!--    通过UserCount和Userpasswrod查找账号 -->
    <select id="login" parameterType="User" resultType="User">
        select * from User WHERE (userCount=#{userCount}  or userNo=#{userCount}) and userPassword=#{userPassword} 
    </select>
    
    <!-- 查找最大的学生序号 - Max(userId) -->
    <select id="findMaxUserId" resultType="Integer">
    	select Max(userId) from User
    </select>
    
    
    

	<!-- 插入数据的方法 -->
    <insert id="InsertUser" parameterType="User">
    	insert into User(userId,userNo,userCount,userName,userPassword,userCollege,userGrades,telPhone,email,stutas)
    				values(#{userId},#{userNo},#{userCount},#{userName},#{userPassword},#{userCollege},#{userGrades},#{telPhone},#{email},'1')
    </insert>
    
    <!-- 通过学号查找  -->
    <select id="findByUserNo" parameterType="String" resultType="User">
    	select * from User where userNo=#{userNo}
    </select>
    
     <!-- 通过学生账号查找  -->
    <select id="findByUserCount" parameterType="String" resultType="User">
    	select * from User where userCount=#{userCount}
    </select>
    
     <!-- 通过电话号码查找  -->
    <select id="findByTelPhone" parameterType="String" resultType="User">
    	select * from User where telPhone=#{telPhone}
    </select>
    
     <!-- 通过邮箱查找账号  -->
    <select id="findByEmail" parameterType="String" resultType="User">
    	select * from User where email=#{email}
    </select>
    
    <!-- 通过年级查找学生总数 -->
    <select id="findTotalNumberByGrade" parameterType="String" resultType="Integer">
    	select count(*) from User where userGrades=#{userGrades} order by userId; 
    </select>
    
    <!-- 通过年级号 进行分页查找数据 -->
    <select id="findAllByUserGrade" resultType="User">
    	select * from User where userGrades=#{userGrades} limit #{start}, #{end}
    </select>
    
    <!-- 删除社团成员的方法 -->
    <delete id="deleteUser" parameterType="Integer">
    	delete from User where userId=#{userId}
    </delete>
    
    <!-- 通过序号查找成员 -->
    <select id="findByUserId" parameterType="Integer" resultType="User">
    	select * from User where userId=#{userId}
    </select>
    
    <!-- 更新社团成员的方法 -->
    <update id="updateUser" parameterType="User">
    	update User 
    		<set>
    			<if test="userNo !=null and userNo !=''">
    				userNo=#{userNo},
    			</if>
    			<if test="userCount !=null and userCount !=''">
    				userCount=#{userCount},
    			</if>
    			<if test="userName !=null and userName !=''">
    				userName=#{userName},
    			</if>
    			<if test="userCollege !=null and userCollege !=''">
    				userCollege=#{userCollege},
    			</if>
    			
    			<if test="telPhone !=null and telPhone !=''">
    				telPhone=#{telPhone},
    			</if>
    			<if test="email !=null and email !=''">
    				email=#{email}
    			</if>
    		
    		</set>
    		where userId=#{userId}
    </update>
    
    <!-- 找回密码之查询数据的方法 -->
    <select id="findToEditUserPassword" parameterType="User" resultType="Integer">
    	select userId from User where userNo=#{userNo} and userCount=#{userCount} and telPhone=#{telPhone} and userName=#{userName}
    </select>
    
    <!-- 更新成员密码的方法  -->
    <update id="updateUserPwd">
    	update User
    		<set>
    			<if test=" userPassword !=null and userPassword !=''  ">
    				userPassword=#{userPassword}
    			</if>
    		</set>
    		where userId=#{userId}
    </update>
    
    <!-- 模糊查询 -->
    <select id="queryUser" parameterType="String" resultType="User">
    	select * from User where userNo like "%"#{querymessage}"%" or userCount like "%"#{querymessage}"%" or userName like "%"#{querymessage}"%" or userCollege like "%"#{querymessage}"%"
    </select>
    
    <!-- Excel导出User -->
    <select id="findExportUser" parameterType="String" resultType="User">
    	select userNo,userCount,userName,userCollege,email,telPhone
    	
    	  from User where userGrades=#{userGrades}
    </select>
    
    <!-- 更改专业的方法 -->
    <update id="updateCollegeByCollege" parameterType="String">
    	update User
    		<set>
    			<if test=" collegeName != null or collegeName != '' ">
    				userCollege =#{collegeName}
    			</if>
    		</set>
    		where userCollege=#{userCollege}
    </update>
</mapper>